* 
** teardown

#+begin_example
time { cd /Users/mtm/pdev/taylormonacelli/relyleaf/aws2 && bash -x teardown.sh; }
#+end_example

** setup

#+begin_example
cd /Users/mtm/pdev/taylormonacelli/relyleaf/aws2 && time bash -x setup.sh
#+end_example

** docs

https://minikube.sigs.k8s.io/docs/tutorials/nginx_tcp_udp_ingress/
https://stackoverflow.com/a/69802398/1495086
https://kubernetes.github.io/ingress-nginx/user-guide/exposing-tcp-udp-services/

** aws console

# Route53
open "https://us-east-1.console.aws.amazon.com/route53/v2/hostedzones#ListRecordSets/ZYM2WVE2N8MU5"

# Load balancer
open "https://us-east-1.console.aws.amazon.com/ec2/v2/home?region=us-east-1#LoadBalancers:sort=loadBalancerName"

** setup and teardown all in one line

#+begin_example
time { cd /Users/mtm/pdev/taylormonacelli/relyleaf/aws2 && bash -x teardown.sh; cd /Users/mtm/pdev/taylormonacelli/relyleaf/aws2 && time bash -x setup.sh; }
#+end_example

** upgrade ingress-nginx
*** testing this

time helm upgrade --install ingress-nginx ingress-nginx/ingress-nginx --namespace ingress-nginx --set tcp.6379="default/redis:6379"

*** this works

https://stackoverflow.com/a/69802398/1495086

** test
*** this is how to test on minikube

# telnet $(minikube ip) 6379

*** test

Testing from my mbp/workstation is often wrong because dns fails

So, test from remote host taylor-linux-ubuntu-us-east-2.streambox.com

ssh root@taylor-linux-ubuntu-us-east-2.streambox.com
apt-get -qq update
apt-get -qy install redis-tools

ssh root@taylor-linux-ubuntu-us-east-2.streambox.com redis-cli -p 6379 -h redis.mindevent.streambox.com ping
telnet redis.mindevent.streambox.com 6379
redis-cli -p 6379 -h redis.mindevent.streambox.com ping

**** log displaying that it works as expected

#+begin_example
[mtm@taylors-MacBook-Pro:~(master)]$ redis-cli -p 6379 -h redis.mindevent.streambox.com ping
PONG
[mtm@taylors-MacBook-Pro:~(master)]$
#+end_example

** chicken scratch
*** skip this: Notice here that I've adjusted service name from redis-service to just redis.

#+begin_example
kubectl patch configmap tcp-services -n ingress-nginx --patch '{"data":{"6379":"default/redis:6379"}}'
#+end_example
